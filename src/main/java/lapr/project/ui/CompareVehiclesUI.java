/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lapr.project.ui;

import java.awt.Color;
import java.util.ArrayList;
import lapr.project.controller.BestPathController;
import lapr.project.model.Junction;
import lapr.project.model.Project;
import lapr.project.model.RoadNetwork;
import lapr.project.model.Vehicle;

/**
 *
 * @author rgcar
 */
public class CompareVehiclesUI extends javax.swing.JFrame {
      public static final long serialVersionUID = 1L;
      private Project project;
      private Vehicle v1;
      private Vehicle v2;
      private Junction j1, j2;
      private ArrayList<String> vehicleList1;
      private ArrayList<String> vehicleList2;
      private ArrayList<String> path1;
      private ArrayList<String> path2;
      private double load = 0.0;
      

    /**
     * Creates new form BestPathUI
     * @param project
     */
    public CompareVehiclesUI(Project project) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.project = project;
        activeProjectTF.setText(project.getName());
        populateVehicleComboBox();
        populateInitPointComboBox();
        populateEndPointComboBox();
        
    }
    
    private void populateVehicleComboBox() {
        BestPathController bpc = new BestPathController(this.project);
        vehicleList1 = bpc.getComboBoxVehicleList(this.project);
        String[] array = vehicleList1.toArray(new String[vehicleList1.size()]);
        vehicleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(array));
        vehicleComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(array));
    }
    
    private void populateInitPointComboBox() {
        BestPathController bpc = new BestPathController(this.project);
        ArrayList<String> junctionList = bpc.getcomboBoxJunctionList(this.project);
        String[] array = junctionList.toArray(new String[junctionList.size()]);
        initPointComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(array));
    }

    private void populateEndPointComboBox() {
        BestPathController bpc = new BestPathController(this.project);
        ArrayList<String> junctionList = bpc.getcomboBoxJunctionList(this.project);
        String[] array = junctionList.toArray(new String[junctionList.size()]);
        endPointComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(array));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        titleLBL = new javax.swing.JLabel();
        sVehicleLBL = new javax.swing.JLabel();
        vehicleComboBox = new javax.swing.JComboBox<>();
        selectInitPointLBL = new javax.swing.JLabel();
        initPointComboBox = new javax.swing.JComboBox<>();
        selectEndPointLBL = new javax.swing.JLabel();
        endPointComboBox = new javax.swing.JComboBox<>();
        fastestBTN = new javax.swing.JButton();
        theoreticalBTN = new javax.swing.JButton();
        realBTN = new javax.swing.JButton();
        resultsLBL = new javax.swing.JLabel();
        resultsPanel = new javax.swing.JPanel();
        pathScroll = new javax.swing.JScrollPane();
        pathTextArea = new javax.swing.JTextArea();
        pathLBL = new javax.swing.JLabel();
        travelingTimeLBL = new javax.swing.JLabel();
        secondsTF = new javax.swing.JTextField();
        consuptionLBL = new javax.swing.JLabel();
        consumptionTF = new javax.swing.JTextField();
        tollLBL = new javax.swing.JLabel();
        tollCostTF = new javax.swing.JTextField();
        exitBTN = new javax.swing.JButton();
        sProjectLBL = new javax.swing.JLabel();
        htmlBTN = new javax.swing.JButton();
        csvBTN = new javax.swing.JButton();
        activeProjectTF = new javax.swing.JTextField();
        dataBaseBTN = new javax.swing.JButton();
        sVehicleLBL1 = new javax.swing.JLabel();
        vehicleComboBox1 = new javax.swing.JComboBox<>();
        resultsPanel1 = new javax.swing.JPanel();
        pathScroll1 = new javax.swing.JScrollPane();
        pathTextArea1 = new javax.swing.JTextArea();
        pathLBL1 = new javax.swing.JLabel();
        travelingTimeLBL1 = new javax.swing.JLabel();
        secondsTF1 = new javax.swing.JTextField();
        consuptionLBL1 = new javax.swing.JLabel();
        consumptionTF1 = new javax.swing.JTextField();
        tollLBL1 = new javax.swing.JLabel();
        tollCostTF1 = new javax.swing.JTextField();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Best Path");
        setMinimumSize(new java.awt.Dimension(605, 742));

        titleLBL.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        titleLBL.setForeground(new java.awt.Color(0, 102, 153));
        titleLBL.setText("Vehicle Comparison");
        titleLBL.setToolTipText("");

        sVehicleLBL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sVehicleLBL.setForeground(new java.awt.Color(0, 102, 153));
        sVehicleLBL.setText("Select Vehicle:");

        vehicleComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        vehicleComboBox.setForeground(new java.awt.Color(102, 102, 102));
        vehicleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[20]));
        vehicleComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehicleComboBoxActionPerformed(evt);
            }
        });

        selectInitPointLBL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        selectInitPointLBL.setForeground(new java.awt.Color(0, 102, 153));
        selectInitPointLBL.setText("Select Source:");
        selectInitPointLBL.setToolTipText("");

        initPointComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        initPointComboBox.setForeground(new java.awt.Color(102, 102, 102));
        initPointComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[30]));
        initPointComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                initPointComboBoxActionPerformed(evt);
            }
        });

        selectEndPointLBL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        selectEndPointLBL.setForeground(new java.awt.Color(0, 102, 153));
        selectEndPointLBL.setText("Select Destiny:");
        selectEndPointLBL.setToolTipText("");

        endPointComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        endPointComboBox.setForeground(new java.awt.Color(102, 102, 102));
        endPointComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[30]));
        endPointComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endPointComboBoxActionPerformed(evt);
            }
        });

        fastestBTN.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        fastestBTN.setForeground(new java.awt.Color(102, 102, 102));
        fastestBTN.setText("Fastest Path");
        fastestBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fastestBTNActionPerformed(evt);
            }
        });

        theoreticalBTN.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        theoreticalBTN.setForeground(new java.awt.Color(102, 102, 102));
        theoreticalBTN.setText("Most Efficient Path (Theoretical)");
        theoreticalBTN.setToolTipText("");
        theoreticalBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                theoreticalBTNActionPerformed(evt);
            }
        });

        realBTN.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        realBTN.setForeground(new java.awt.Color(102, 102, 102));
        realBTN.setText("Most Efficient Path (Real)");
        realBTN.setToolTipText("");
        realBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                realBTNActionPerformed(evt);
            }
        });

        resultsLBL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        resultsLBL.setForeground(new java.awt.Color(0, 102, 153));
        resultsLBL.setText("Results");
        resultsLBL.setToolTipText("");

        resultsPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)));

        pathScroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        pathTextArea.setEditable(false);
        pathTextArea.setColumns(20);
        pathTextArea.setForeground(new java.awt.Color(102, 102, 102));
        pathTextArea.setLineWrap(true);
        pathTextArea.setRows(100);
        pathTextArea.setTabSize(20);
        pathTextArea.setToolTipText("");
        pathScroll.setViewportView(pathTextArea);

        pathLBL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pathLBL.setForeground(new java.awt.Color(0, 102, 153));
        pathLBL.setText("Path");
        pathLBL.setToolTipText("");

        travelingTimeLBL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        travelingTimeLBL.setForeground(new java.awt.Color(0, 102, 153));
        travelingTimeLBL.setText("Traveling Time(Hours:Minutes:Seconds):");
        travelingTimeLBL.setToolTipText("");

        secondsTF.setEditable(false);
        secondsTF.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        secondsTF.setForeground(new java.awt.Color(102, 102, 102));
        secondsTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondsTFActionPerformed(evt);
            }
        });

        consuptionLBL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        consuptionLBL.setForeground(new java.awt.Color(0, 102, 153));
        consuptionLBL.setText("Energy Consumption (MJ):");
        consuptionLBL.setToolTipText("");

        consumptionTF.setEditable(false);
        consumptionTF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        consumptionTF.setForeground(new java.awt.Color(102, 102, 102));

        tollLBL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tollLBL.setForeground(new java.awt.Color(0, 102, 153));
        tollLBL.setText("Total Toll Cost (€): ");
        tollLBL.setToolTipText("");

        tollCostTF.setEditable(false);
        tollCostTF.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tollCostTF.setForeground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout resultsPanelLayout = new javax.swing.GroupLayout(resultsPanel);
        resultsPanel.setLayout(resultsPanelLayout);
        resultsPanelLayout.setHorizontalGroup(
            resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanelLayout.createSequentialGroup()
                .addGroup(resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(resultsPanelLayout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(pathLBL))
                    .addGroup(resultsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pathScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsPanelLayout.createSequentialGroup()
                        .addComponent(tollLBL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tollCostTF, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(resultsPanelLayout.createSequentialGroup()
                            .addComponent(consuptionLBL)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(consumptionTF))
                        .addComponent(secondsTF)
                        .addComponent(travelingTimeLBL)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        resultsPanelLayout.setVerticalGroup(
            resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanelLayout.createSequentialGroup()
                .addGroup(resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(resultsPanelLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(pathLBL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pathScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, resultsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(travelingTimeLBL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(secondsTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(consuptionLBL)
                            .addComponent(consumptionTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tollLBL)
                            .addComponent(tollCostTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        exitBTN.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        exitBTN.setForeground(new java.awt.Color(102, 102, 102));
        exitBTN.setText("Exit");
        exitBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBTNActionPerformed(evt);
            }
        });

        sProjectLBL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sProjectLBL.setForeground(new java.awt.Color(0, 102, 153));
        sProjectLBL.setText("Active Project:");

        htmlBTN.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        htmlBTN.setForeground(new java.awt.Color(102, 102, 102));
        htmlBTN.setText("Save to Html");
        htmlBTN.setToolTipText("");
        htmlBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                htmlBTNActionPerformed(evt);
            }
        });

        csvBTN.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        csvBTN.setForeground(new java.awt.Color(102, 102, 102));
        csvBTN.setText("Save to CSV");
        csvBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                csvBTNActionPerformed(evt);
            }
        });

        activeProjectTF.setEditable(false);
        activeProjectTF.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        activeProjectTF.setForeground(new java.awt.Color(102, 102, 102));
        activeProjectTF.setBorder(null);

        dataBaseBTN.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        dataBaseBTN.setForeground(new java.awt.Color(102, 102, 102));
        dataBaseBTN.setText("Save to DataBase");
        dataBaseBTN.setToolTipText("");
        dataBaseBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataBaseBTNActionPerformed(evt);
            }
        });

        sVehicleLBL1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sVehicleLBL1.setForeground(new java.awt.Color(0, 102, 153));
        sVehicleLBL1.setText("Select Vehicle:");

        vehicleComboBox1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        vehicleComboBox1.setForeground(new java.awt.Color(102, 102, 102));
        vehicleComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[20]));
        vehicleComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehicleComboBox1ActionPerformed(evt);
            }
        });

        resultsPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)));

        pathScroll1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        pathTextArea1.setEditable(false);
        pathTextArea1.setColumns(20);
        pathTextArea1.setForeground(new java.awt.Color(102, 102, 102));
        pathTextArea1.setLineWrap(true);
        pathTextArea1.setRows(100);
        pathTextArea1.setTabSize(20);
        pathTextArea1.setToolTipText("");
        pathScroll1.setViewportView(pathTextArea1);

        pathLBL1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pathLBL1.setForeground(new java.awt.Color(0, 102, 153));
        pathLBL1.setText("Path");
        pathLBL1.setToolTipText("");

        travelingTimeLBL1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        travelingTimeLBL1.setForeground(new java.awt.Color(0, 102, 153));
        travelingTimeLBL1.setText("Traveling Time(Hours:Minutes:Seconds):");
        travelingTimeLBL1.setToolTipText("");

        secondsTF1.setEditable(false);
        secondsTF1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        secondsTF1.setForeground(new java.awt.Color(102, 102, 102));
        secondsTF1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondsTF1ActionPerformed(evt);
            }
        });

        consuptionLBL1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        consuptionLBL1.setForeground(new java.awt.Color(0, 102, 153));
        consuptionLBL1.setText("Energy Consumption (MJ):");
        consuptionLBL1.setToolTipText("");

        consumptionTF1.setEditable(false);
        consumptionTF1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        consumptionTF1.setForeground(new java.awt.Color(102, 102, 102));

        tollLBL1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tollLBL1.setForeground(new java.awt.Color(0, 102, 153));
        tollLBL1.setText("Total Toll Cost (€): ");
        tollLBL1.setToolTipText("");

        tollCostTF1.setEditable(false);
        tollCostTF1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tollCostTF1.setForeground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout resultsPanel1Layout = new javax.swing.GroupLayout(resultsPanel1);
        resultsPanel1.setLayout(resultsPanel1Layout);
        resultsPanel1Layout.setHorizontalGroup(
            resultsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanel1Layout.createSequentialGroup()
                .addGroup(resultsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(resultsPanel1Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(pathLBL1))
                    .addGroup(resultsPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pathScroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(resultsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsPanel1Layout.createSequentialGroup()
                        .addComponent(tollLBL1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tollCostTF1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(resultsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(resultsPanel1Layout.createSequentialGroup()
                            .addComponent(consuptionLBL1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(consumptionTF1))
                        .addComponent(secondsTF1)
                        .addComponent(travelingTimeLBL1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        resultsPanel1Layout.setVerticalGroup(
            resultsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanel1Layout.createSequentialGroup()
                .addGroup(resultsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(resultsPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(pathLBL1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pathScroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, resultsPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(travelingTimeLBL1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(secondsTF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(resultsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(consuptionLBL1)
                            .addComponent(consumptionTF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(resultsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tollLBL1)
                            .addComponent(tollCostTF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(resultsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resultsPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectEndPointLBL)
                            .addComponent(selectInitPointLBL)
                            .addComponent(sVehicleLBL)
                            .addComponent(sProjectLBL))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(endPointComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(initPointComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(activeProjectTF)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(vehicleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(sVehicleLBL1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(vehicleComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(resultsLBL)
                .addGap(474, 474, 474))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(368, 368, 368)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(theoreticalBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(realBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fastestBTN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(408, 408, 408)
                        .addComponent(titleLBL))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(dataBaseBTN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(csvBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(htmlBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(exitBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(titleLBL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sProjectLBL)
                    .addComponent(activeProjectTF, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sVehicleLBL)
                    .addComponent(vehicleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sVehicleLBL1)
                    .addComponent(vehicleComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(initPointComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectInitPointLBL))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(endPointComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectEndPointLBL))
                .addGap(18, 18, 18)
                .addComponent(fastestBTN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(realBTN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(theoreticalBTN)
                .addGap(13, 13, 13)
                .addComponent(resultsLBL)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(resultsPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(csvBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dataBaseBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(htmlBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exitBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void vehicleComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehicleComboBoxActionPerformed
        BestPathController bpc = new BestPathController(this.project);
        v1 = this.project.getRegistVehicle().getVehicleByName((String)vehicleComboBox.getSelectedItem());       
    }//GEN-LAST:event_vehicleComboBoxActionPerformed

    private void fastestBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fastestBTNActionPerformed
        
        pathTextArea.setText("");
        secondsTF.setText("");
        consumptionTF.setText("");
        tollCostTF.setText("");
        pathTextArea1.setText("");
        secondsTF1.setText("");
        consumptionTF1.setText("");
        tollCostTF1.setText("");
     
        
        // Using mock objects in RunUI
        BestPathController bpc = new BestPathController(this.project);
        
        double[] values1 = new double[3];
        double[] values2 = new double[3];
        values1 = bpc.getBestPathValues(j1, j2, v1, 1.0, 1.0, v1.getLoad(), "FASTESTPATH");
        values2 = bpc.getBestPathValues(j1, j2, v2, 1.0, 1.0, v2.getLoad(), "FASTESTPATH");
//       v.setLoad(Double.parseDouble(loadTF.getText()));
        //fill fastest pathTextArea
        path1 = bpc.getBestPathtoArray(j1, j2, v1,1.0,1.0,v1.getLoad(),"FASTESTPATH");
        path2 = bpc.getBestPathtoArray(j1, j2, v1,1.0,1.0,v2.getLoad(),"FASTESTPATH");
        for (String name : path1) {
            pathTextArea.append(name);  
        }
          for (String name : path2) {
            pathTextArea1.append(name);  
        }
       
        //fill travel time; consumption, tollCost
        secondsTF.setText(RoadNetwork.timeToString(values1[0]));
        consumptionTF.setText(Double.toString(values1[1]));
        tollCostTF.setText(Double.toString(values1[2]));
        
        secondsTF1.setText(RoadNetwork.timeToString(values2[0]));
        consumptionTF1.setText(Double.toString(values2[1]));
        tollCostTF1.setText(Double.toString(values2[2]));
        
        if(values2[0] < values1[0]){
            secondsTF1.setBackground(Color.GREEN);
        }else{
            secondsTF.setBackground(Color.GREEN);
        }
        
        if(values2[0] < values1[0]){
            consumptionTF1.setBackground(Color.GREEN);
        }else{
            consumptionTF.setBackground(Color.GREEN);
        }
        
        if(values2[0] < values1[0]){
            tollCostTF1.setBackground(Color.GREEN);
        }else{
            tollCostTF.setBackground(Color.GREEN);
        }
            
    }//GEN-LAST:event_fastestBTNActionPerformed

    private void realBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_realBTNActionPerformed

        pathTextArea.setText("");
        secondsTF.setText("");
        consumptionTF.setText("");
        tollCostTF.setText("");
        
        pathTextArea1.setText("");
        secondsTF1.setText("");
        consumptionTF1.setText("");
        tollCostTF1.setText("");
       
        
        
        // Using mock objects in RunUI
        BestPathController bpc = new BestPathController(this.project);
        double[] values1 = new double[3];
        double[] values2 = new double[3];
        values1 = bpc.getBestPathValues(j1, j2, v1, 1.0, 1.0, v1.getLoad(), "EFFECIENTPATHREAL");
        values2 = bpc.getBestPathValues(j1, j2, v2, 1.0, 1.0, v2.getLoad(), "EFFECIENTPATHREAL");
        //fill fastest pathTextArea
         path1 = bpc.getBestPathtoArray(j1, j2, v1,1.0,1.0,v1.getLoad(),"EFFECIENTPATHREAL");
         path2 = bpc.getBestPathtoArray(j1, j2, v2,1.0,1.0,v2.getLoad(),"EFFECIENTPATHREAL");
        for (String name : path1) {
            pathTextArea.append(name);
        }
        
        for (String name : path2) {
            pathTextArea1.append(name);
        }
       
        //fill travel time; consumption, tollCost
        secondsTF.setText(RoadNetwork.timeToString(values1[0]));
        consumptionTF.setText(Double.toString(values1[1]));
        tollCostTF.setText(Double.toString(values1[2]));
        secondsTF1.setText(RoadNetwork.timeToString(values2[0]));
        consumptionTF1.setText(Double.toString(values2[1]));
        tollCostTF1.setText(Double.toString(values2[2]));
        
        if(values2[0] < values1[0]){
            secondsTF1.setBackground(Color.GREEN);
        }else{
            secondsTF.setBackground(Color.GREEN);
        }
        
        if(values2[0] < values1[0]){
            consumptionTF1.setBackground(Color.GREEN);
        }else{
            consumptionTF.setBackground(Color.GREEN);
        }
        
        if(values2[0] < values1[0]){
            tollCostTF1.setBackground(Color.GREEN);
        }else{
            tollCostTF.setBackground(Color.GREEN);
        }
    }//GEN-LAST:event_realBTNActionPerformed

    private void theoreticalBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_theoreticalBTNActionPerformed
        
        pathTextArea.setText("");
        secondsTF.setText("");
        consumptionTF.setText("");
        tollCostTF.setText("");
        
        pathTextArea1.setText("");
        secondsTF1.setText("");
        consumptionTF1.setText("");
        tollCostTF1.setText("");
        
        BestPathController bpc = new BestPathController(this.project);
        double[] values1 = new double[3];
        double[] values2 = new double[3];
        
        values1 = bpc.getBestPathValues(j1, j2, v1, 1.0, 1.0, v1.getLoad(), "EFFECIENTPATHTHEORICAL");
        values2 = bpc.getBestPathValues(j1, j2, v2, 1.0, 1.0, v2.getLoad(), "EFFECIENTPATHTHEORICAL");
        //fill fastest pathTextArea
        path1 = bpc.getBestPathtoArray(j1, j2, v1,1.0,1.0,v1.getLoad(),"EFFECIENTPATHTHEORICAL");
        path2 = bpc.getBestPathtoArray(j1, j2, v2,1.0,1.0,v2.getLoad(),"EFFECIENTPATHTHEORICAL");
        for (String name : path1) {
            pathTextArea.append(name);
            pathTextArea.append("; ");
        }
        for (String name : path2) {
            pathTextArea1.append(name);
            pathTextArea1.append("; ");
        }
       
        //fill travel time; consumption, tollCost
        secondsTF.setText(RoadNetwork.timeToString(values1[0]));
        consumptionTF.setText(String.format(".2f", Double.toString(values1[1])));
        tollCostTF.setText(Double.toString(values1[2]));
        
        secondsTF1.setText(RoadNetwork.timeToString(values2[0]));
        consumptionTF1.setText(String.format(".2f", Double.toString(values2[1])));
        tollCostTF1.setText(Double.toString(values2[2]));
        
        if(values2[0] < values1[0]){
            secondsTF1.setBackground(Color.GREEN);
        }else{
            secondsTF.setBackground(Color.GREEN);
        }
        
        if(values2[0] < values1[0]){
            consumptionTF1.setBackground(Color.GREEN);
        }else{
            consumptionTF.setBackground(Color.GREEN);
        }
        
        if(values2[0] < values1[0]){
            tollCostTF1.setBackground(Color.GREEN);
        }else{
            tollCostTF.setBackground(Color.GREEN);
        }
    }//GEN-LAST:event_theoreticalBTNActionPerformed

    private void initPointComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_initPointComboBoxActionPerformed
        BestPathController bpc = new BestPathController(this.project);
        j1 = this.project.getJunctionInProject((String) initPointComboBox.getSelectedItem(), this.project.getRoadNetwork().vertices());

    }//GEN-LAST:event_initPointComboBoxActionPerformed

    private void endPointComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endPointComboBoxActionPerformed
        BestPathController bpc = new BestPathController(this.project);
        j2 = this.project.getJunctionInProject((String) endPointComboBox.getSelectedItem(), this.project.getRoadNetwork().vertices());
    }//GEN-LAST:event_endPointComboBoxActionPerformed

    private void csvBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_csvBTNActionPerformed
        String projName = activeProjectTF.getText();
        String vehicleName = v1.getName();
        String initJunctionName = j1.getId();
        String endJunctionName = j2.getId();
        String filePath = "resultsCSV.txt";
        double energyConsumption = Double.parseDouble(consumptionTF.getText());
        double travelTime = Double.parseDouble(secondsTF.getText());
        double tollCost = Double.parseDouble(tollCostTF.getText());

        BestPathController bpc = new BestPathController(this.project);

        bpc.exportNetworkAnalysisCSV(projName, vehicleName, initJunctionName, endJunctionName, energyConsumption,
                travelTime, tollCost, path1, filePath);
       
    }//GEN-LAST:event_csvBTNActionPerformed

    private void exitBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBTNActionPerformed
        super.dispose();
    }//GEN-LAST:event_exitBTNActionPerformed

    private void htmlBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_htmlBTNActionPerformed
        String projName = activeProjectTF.getText();
        String vehicleName = v1.getName();
        String initJunctionName = j1.getId();
        String endJunctionName = j2.getId();
        String filePath = "resultsCSV.HTML";
        double energyConsumption = Double.parseDouble(consumptionTF.getText());
        double travelTime = Double.parseDouble(secondsTF.getText());
        double tollCost = Double.parseDouble(tollCostTF.getText());

        BestPathController bpc = new BestPathController(this.project);

        bpc.exportNetworkAnalysisCSV(projName, vehicleName, initJunctionName, endJunctionName, energyConsumption,
                travelTime, tollCost, path1, filePath);
    }//GEN-LAST:event_htmlBTNActionPerformed

    private void secondsTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondsTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_secondsTFActionPerformed

    private void dataBaseBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataBaseBTNActionPerformed
        
//        double energyConsumption = Double.parseDouble(consumptionTF.getText());
//        String travelTime = secondsTF.getText();
//        double tollCost = Double.parseDouble(tollCostTF.getText());
//        
//        BestPathController bpc = new BestPathController(this.project);
//        
//        bpc.saveResultsInDataBase(activeProjectTF.getText(), travelTime, energyConsumption, tollCost);
       
    }//GEN-LAST:event_dataBaseBTNActionPerformed

    private void vehicleComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehicleComboBox1ActionPerformed
        
        BestPathController bpc = new BestPathController(this.project);
        v2 = this.project.getRegistVehicle().getVehicleByName((String)vehicleComboBox1.getSelectedItem());  
    }//GEN-LAST:event_vehicleComboBox1ActionPerformed

    private void secondsTF1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondsTF1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_secondsTF1ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(BestPathUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(BestPathUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(BestPathUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(BestPathUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new BestPathUI().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField activeProjectTF;
    private javax.swing.JTextField consumptionTF;
    private javax.swing.JTextField consumptionTF1;
    private javax.swing.JLabel consuptionLBL;
    private javax.swing.JLabel consuptionLBL1;
    private javax.swing.JButton csvBTN;
    private javax.swing.JButton dataBaseBTN;
    private javax.swing.JComboBox<String> endPointComboBox;
    private javax.swing.JButton exitBTN;
    private javax.swing.JButton fastestBTN;
    private javax.swing.JButton htmlBTN;
    private javax.swing.JComboBox<String> initPointComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel pathLBL;
    private javax.swing.JLabel pathLBL1;
    private javax.swing.JScrollPane pathScroll;
    private javax.swing.JScrollPane pathScroll1;
    private javax.swing.JTextArea pathTextArea;
    private javax.swing.JTextArea pathTextArea1;
    private javax.swing.JButton realBTN;
    private javax.swing.JLabel resultsLBL;
    private javax.swing.JPanel resultsPanel;
    private javax.swing.JPanel resultsPanel1;
    private javax.swing.JLabel sProjectLBL;
    private javax.swing.JLabel sVehicleLBL;
    private javax.swing.JLabel sVehicleLBL1;
    private javax.swing.JTextField secondsTF;
    private javax.swing.JTextField secondsTF1;
    private javax.swing.JLabel selectEndPointLBL;
    private javax.swing.JLabel selectInitPointLBL;
    private javax.swing.JButton theoreticalBTN;
    private javax.swing.JLabel titleLBL;
    private javax.swing.JTextField tollCostTF;
    private javax.swing.JTextField tollCostTF1;
    private javax.swing.JLabel tollLBL;
    private javax.swing.JLabel tollLBL1;
    private javax.swing.JLabel travelingTimeLBL;
    private javax.swing.JLabel travelingTimeLBL1;
    private javax.swing.JComboBox<String> vehicleComboBox;
    private javax.swing.JComboBox<String> vehicleComboBox1;
    // End of variables declaration//GEN-END:variables

    
}
